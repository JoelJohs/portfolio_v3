---
// Componente para controlar el tipo de partículas
---

<div class="particles-toggle">
  <button id="toggle-particles" class="toggle-btn" title="Cambio de partículas">
    <span class="icon">🧊</span>
  </button>
</div>

<style>
  .particles-toggle {
    position: fixed;
    bottom: 1.5rem;
    left: 1.5rem;
    z-index: 1000;
  }

  .toggle-btn {
    width: 56px;
    height: 56px;
    background: rgba(15, 23, 42, 0.9);
    backdrop-filter: blur(12px);
    border: 1px solid var(--cristal);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  }

  .toggle-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.4);
    background: rgba(15, 23, 42, 0.95);
  }

  .icon {
    font-size: 1.5rem;
    transition: transform var(--transition);
  }

  .toggle-btn:hover .icon {
    transform: rotate(180deg) scale(1.1);
  }

  @media (max-width: 768px) {
    .particles-toggle {
      bottom: 1rem;
      left: 1rem;
    }
  }

  @media (max-width: 480px) {
    .particles-toggle {
      bottom: 0.75rem;
      left: 0.75rem;
    }

    .toggle-btn {
      width: 52px;
      height: 52px;
    }

    .icon {
      font-size: 1.3rem;
    }
  }

  @media (max-width: 360px) {
    .particles-toggle {
      bottom: 0.5rem;
      left: 0.5rem;
    }

    .toggle-btn {
      width: 48px;
      height: 48px;
    }

    .icon {
      font-size: 1.2rem;
    }
  }

  @media (min-width: 769px) and (max-width: 1024px) {
    .particles-toggle {
      bottom: 1.25rem;
      left: 1.25rem;
    }
  }

  @media (min-width: 1025px) {
    .particles-toggle {
      bottom: 2rem;
      left: 2rem;
    }
  }
</style>

<script>
  // Declaración global
  declare global {
    interface Window {
      trackAchieve: (achievementId: string) => void;
    }
  }

  let currentMode: "css" | "threejs" = "css";

  function toggleParticles() {
    const cssParticles = document.getElementById("particles");
    const threeContainer = document.getElementById("three-canvas-container");
    const toggleBtn = document.getElementById("toggle-particles");
    const toggleIcon = toggleBtn?.querySelector(".icon");

    if (currentMode === "css") {
      // Cambiar a Three.js
      if (cssParticles) {
        cssParticles.style.display = "none";
      }
      if (threeContainer) {
        threeContainer.style.display = "block";
      }
      if (toggleIcon) {
        toggleIcon.textContent = "🖼️"; // 2D emoji para indicar que puede volver a 2D
      }
      currentMode = "threejs";

      // Trigger achievement
      if (window.trackAchieve) {
        window.trackAchieve("particulas3D");
      }

      // Dispatch event to initialize Three.js particles
      window.dispatchEvent(new CustomEvent("initThreeParticles"));
    } else {
      // Cambiar a CSS
      if (threeContainer) {
        threeContainer.style.display = "none";
      }
      if (cssParticles) {
        cssParticles.style.display = "block";
      }
      if (toggleIcon) {
        toggleIcon.textContent = "🧊"; // 3D emoji para indicar que puede cambiar a 3D
      }
      currentMode = "css";

      // Dispatch event to cleanup Three.js particles
      window.dispatchEvent(new CustomEvent("cleanupThreeParticles"));
    }

    // Save preference
    localStorage.setItem("particlesMode", currentMode);
  }

  // Initialize
  document.addEventListener("DOMContentLoaded", () => {
    const toggleBtn = document.getElementById("toggle-particles");
    const toggleIcon = toggleBtn?.querySelector(".icon");
    const savedMode =
      (localStorage.getItem("particlesMode") as "css" | "threejs") || "css";

    if (toggleBtn) {
      toggleBtn.addEventListener("click", toggleParticles);
    }

    // Apply saved mode
    if (savedMode !== "css") {
      currentMode = "css"; // Reset to trigger the toggle
      toggleParticles();
    } else {
      // Hide Three.js particles by default and set correct icon
      const threeContainer = document.getElementById("three-canvas-container");
      if (threeContainer) {
        threeContainer.style.display = "none";
      }
      // Ensure icon shows 3D emoji when in CSS mode (can switch to 3D)
      if (toggleIcon) {
        toggleIcon.textContent = "🧊";
      }
    }
  });
</script>
