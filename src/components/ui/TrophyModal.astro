<div id="logrosModal">
  <div class="modal-box">
    <h3>Logros üèÜ</h3>
    <div id="logrosList"></div>
    <button class="closeModalBtn" onclick="closeModal()">Cerrar</button>
  </div>
</div>

<style>
  /* MODAL LOGROS */
  #logrosModal {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(4px);
    display: none;
    place-items: center;
    z-index: 1000;
  }
  #logrosModal.show {
    display: grid;
  }
  .modal-box {
    background: var(--niebla);
    border-radius: var(--radius);
    padding: 2rem;
    width: 90%;
    max-width: 400px;
    max-height: 80vh;
    overflow-y: auto;
  }
  .modal-box h3 {
    margin-bottom: 1rem;
    color: var(--oro);
    text-align: center;
  }
  .logro-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
  }
  .logro-item svg {
    width: 18px;
    height: 18px;
    fill: var(--oro);
    flex-shrink: 0;
  }
  .logro-item.lock svg {
    fill: var(--niebla);
  }
  .closeModalBtn {
    margin-top: 1rem;
    padding: 0.5rem 1rem;
    background: var(--cristal);
    color: var(--abismo);
    border: none;
    border-radius: var(--radius);
    cursor: pointer;
    width: 100%;
  }
  .closeModalBtn:hover {
    filter: brightness(1.1);
  }

  /* PARTICLES */
  .particles-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -200;
    pointer-events: none;
  }
  .particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: var(--cristal);
    border-radius: 50%;
    opacity: 0.35;
    animation: float 25s infinite linear;
  }
  @keyframes float {
    0% {
      transform: translateY(100vh) rotate(0deg);
    }
    100% {
      transform: translateY(-100vh) rotate(360deg);
    }
  }
</style>

<!-- Modal de logros -->
<div id="logrosModal" class="logros-modal">
  <div class="modal-content">
    <h3>üèÜ Logros Desbloqueados</h3>
    <div id="logrosList" class="logros-list"></div>
    <button onclick="closeModal()" class="close-btn">Cerrar</button>
  </div>
</div>

<style>
  .logros-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .logros-modal.show {
    opacity: 1;
    visibility: visible;
  }

  .modal-content {
    background: var(--niebla);
    padding: 2rem;
    border-radius: var(--radius);
    max-width: 500px;
    width: 90%;
    max-height: 80vh;
    overflow-y: auto;
  }

  .logros-list {
    display: grid;
    gap: 1rem;
    margin: 1rem 0;
  }

  .logro-item {
    padding: 1rem;
    background: var(--abismo);
    border-radius: var(--radius);
    border-left: 4px solid var(--cristal);
  }

  .logro-item.lock {
    opacity: 0.6;
    border-left-color: var(--niebla);
  }

  .close-btn {
    background: var(--cristal);
    color: var(--abismo);
    border: none;
    padding: 0.5rem 1rem;
    border-radius: var(--radius);
    cursor: pointer;
    margin-top: 1rem;
  }
</style>

<script>
  // Declaraciones de tipos para funciones globales
  declare global {
    interface Window {
      trackAchieve: (achievementId: string) => void;
      openModal: () => void;
      closeModal: () => void;
    }
  }

  const logrosData = [
    {
      id: "copiarEmail",
      name: "Rastro digital",
      hint: "¬øD√≥nde guardo mi correo?",
    },
    {
      id: "visitoProyectos",
      name: "Explorador curioso",
      hint: "Mira todos los tipos de proyectos.",
    },
    {
      id: "modoOscuro",
      name: "Sombras activadas",
      hint: "Arriba, arriba, abajo, abajo‚Ä¶",
    },
    {
      id: "tripleClick",
      name: "Toque insistente",
      hint: "El logo no es un bot√≥n‚Ä¶ o s√≠.",
    },
    {
      id: "explorarCodigo",
      name: "Explorador de c√≥digo",
      hint: "Inspecciona el c√≥digo fuente de la p√°gina.",
    },
    {
      id: "reprodujoMusica",
      name: "Ritmo retro",
      hint: "Escucha el ambiente.",
    },
    {
      id: "modoClaro",
      name: "Aurora digital",
      hint: "¬øVolver a la normalidad?",
    },
    {
      id: "datoCurioso",
      name: "Paciente del c√≥digo",
      hint: "Qu√©date quieto un minuto.",
    },
  ];

  const LS_ACHIEVEMENTS = "achievements";

  function getAchievements() {
    return new Set(JSON.parse(localStorage.getItem(LS_ACHIEVEMENTS) || "[]"));
  }

  function updateAchievements() {
    // Ya no necesitamos actualizar contador de bot√≥n
    return;
  }

  function renderLogros() {
    const achievements = getAchievements();
    const list = document.getElementById("logrosList");
    if (!list) return;

    list.innerHTML = "";
    logrosData.forEach((logro) => {
      const done = achievements.has(logro.id);
      const div = document.createElement("div");
      div.className = "logro-item" + (done ? "" : " lock");
      div.innerHTML = `
        ${done ? "‚úÖ" : "üîí"} <strong>${logro.name}</strong><br>
        <small>${done ? "¬°Conseguido!" : "Pista: " + logro.hint}</small>
      `;
      list.appendChild(div);
    });
  }

  function openModal() {
    renderLogros();
    const modal = document.getElementById("logrosModal");
    if (modal) {
      modal.classList.add("show");
    }
  }

  function closeModal() {
    const modal = document.getElementById("logrosModal");
    if (modal) {
      modal.classList.remove("show");
    }
  }

  // Event listeners
  document.addEventListener("DOMContentLoaded", () => {
    const logrosModal = document.getElementById("logrosModal");

    if (logrosModal) {
      logrosModal.addEventListener("click", (e) => {
        if (e.target === logrosModal) {
          closeModal();
        }
      });
    }

    // Listen for custom event from Footer
    window.addEventListener("openAchievementsModal", openModal);

    // Renderizar logros inicial
    renderLogros();
  });

  // Escuchar eventos de logros
  window.addEventListener("achievementUnlocked", () => {
    updateAchievements();
    renderLogros();
  });

  // Hacer funciones globales
  window.openModal = openModal;
  window.closeModal = closeModal;
</script>
