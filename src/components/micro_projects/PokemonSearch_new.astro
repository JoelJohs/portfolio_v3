<div class="pokemon-search">
  <div class="search-container">
    <div class="search-input">
      <input
        type="text"
        id="pokemon-input"
        placeholder="Escribe el nombre de un Pok√©mon..."
        autocomplete="off"
      />
      <button id="search-btn">üîç</button>
    </div>
    <div id="suggestions" class="suggestions"></div>
  </div>

  <div id="pokemon-result" class="pokemon-result">
    <div class="placeholder">
      <span class="icon">‚ö°</span>
      <p>Busca un Pok√©mon para descubrir su forma</p>
    </div>
  </div>
</div>

<style>
  .pokemon-search {
    max-width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .search-container {
    position: relative;
    margin-bottom: 1rem;
  }

  .search-input {
    display: flex;
    gap: 0.5rem;
    position: relative;
  }

  #pokemon-input {
    flex: 1;
    padding: 0.75rem;
    border: 2px solid rgba(100, 255, 218, 0.3);
    background: rgba(10, 25, 47, 0.5);
    color: var(--luz);
    border-radius: var(--radius);
    font-size: 0.9rem;
    transition: all var(--transition);
  }

  #pokemon-input:focus {
    outline: none;
    border-color: var(--cristal);
    box-shadow: 0 0 0 3px rgba(100, 255, 218, 0.2);
    background: rgba(10, 25, 47, 0.7);
  }

  #search-btn {
    padding: 0.75rem 1rem;
    background: var(--cristal);
    color: var(--abismo);
    border: none;
    border-radius: var(--radius);
    cursor: pointer;
    font-weight: 500;
    transition: all var(--transition);
    font-size: 1rem;
    min-width: 50px;
  }

  #search-btn:hover {
    background: var(--oro);
    transform: scale(1.05);
  }

  #search-btn:active {
    transform: scale(0.95);
  }

  .suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: rgba(10, 25, 47, 0.95);
    border: 1px solid rgba(100, 255, 218, 0.3);
    border-radius: var(--radius);
    max-height: 200px;
    overflow-y: auto;
    z-index: 10;
    display: none;
  }

  .suggestion-item {
    padding: 0.75rem;
    cursor: pointer;
    border-bottom: 1px solid rgba(100, 255, 218, 0.1);
    transition: background var(--transition);
    text-transform: capitalize;
  }

  .suggestion-item:hover {
    background: rgba(100, 255, 218, 0.1);
  }

  .suggestion-item:last-child {
    border-bottom: none;
  }

  .pokemon-result {
    flex: 1;
    text-align: center;
    padding: 1.5rem;
    border: 2px solid rgba(100, 255, 218, 0.2);
    border-radius: var(--radius);
    background: linear-gradient(
      135deg,
      rgba(30, 58, 95, 0.3),
      rgba(10, 25, 47, 0.5)
    );
    min-height: 180px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
  }

  .placeholder {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.8rem;
    opacity: 0.6;
  }

  .placeholder .icon {
    font-size: 2.5rem;
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 0.6;
    }
    50% {
      opacity: 1;
    }
  }

  .pokemon-card {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    text-align: left;
    width: 100%;
    animation: fadeIn 0.5s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .pokemon-image {
    width: 100px;
    height: 100px;
    background: radial-gradient(
      circle,
      rgba(100, 255, 218, 0.2),
      rgba(100, 255, 218, 0.05)
    );
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px solid rgba(100, 255, 218, 0.3);
    transition: all var(--transition);
    position: relative;
    overflow: hidden;
    flex-shrink: 0;
  }

  .pokemon-image::before {
    content: "";
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      45deg,
      transparent,
      rgba(255, 255, 255, 0.1),
      transparent
    );
    transform: rotate(45deg);
    transition: transform 0.6s;
  }

  .pokemon-image:hover::before {
    transform: rotate(45deg) translate(100%, 100%);
  }

  .pokemon-image img {
    width: 80px;
    height: 80px;
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.3));
    transition: transform var(--transition);
  }

  .pokemon-image:hover img {
    transform: scale(1.1);
  }

  .pokemon-info {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .pokemon-name {
    color: var(--cristal);
    font-weight: bold;
    text-transform: capitalize;
    font-size: 1.4rem;
    margin: 0;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }

  .pokemon-id {
    color: var(--oro);
    font-size: 0.9rem;
    opacity: 0.8;
  }

  .shiny-indicator {
    position: absolute;
    top: 10px;
    right: 10px;
    background: linear-gradient(45deg, #ffd700, #ffed4e);
    color: #000;
    padding: 0.25rem 0.5rem;
    border-radius: 15px;
    font-size: 0.7rem;
    font-weight: bold;
    animation: sparkle 2s infinite;
  }

  @keyframes sparkle {
    0%,
    100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
  }

  .loading {
    color: var(--oro);
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .loading::after {
    content: "";
    width: 20px;
    height: 20px;
    border: 2px solid var(--oro);
    border-top: 2px solid transparent;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  .error {
    color: #ff6b6b;
    font-size: 0.9rem;
  }
</style>

<script>
  const input = document.getElementById("pokemon-input") as HTMLInputElement;
  const searchBtn = document.getElementById("search-btn");
  const result = document.getElementById("pokemon-result");
  const suggestionsDiv = document.getElementById("suggestions");

  // Lista de algunos Pok√©mon populares para autocompletado
  const popularPokemon = [
    "pikachu",
    "charizard",
    "blastoise",
    "venusaur",
    "mewtwo",
    "mew",
    "lugia",
    "ho-oh",
    "rayquaza",
    "kyogre",
    "groudon",
    "dialga",
    "palkia",
    "giratina",
    "arceus",
    "reshiram",
    "zekrom",
    "kyurem",
    "xerneas",
    "yveltal",
    "zygarde",
    "solgaleo",
    "lunala",
    "necrozma",
    "zacian",
    "zamazenta",
    "eternatus",
    "calyrex",
    "koraidon",
    "miraidon",
    "alakazam",
    "machamp",
    "gengar",
    "dragonite",
    "tyranitar",
    "salamence",
    "metagross",
    "garchomp",
    "lucario",
    "zoroark",
    "greninja",
    "talonflame",
  ];

  let allPokemonNames: string[] = [];
  let debounceTimer: number;

  // Cargar lista completa de Pok√©mon (primeras 1000)
  async function loadPokemonList() {
    try {
      const response = await fetch(
        "https://pokeapi.co/api/v2/pokemon?limit=1000"
      );
      const data = await response.json();
      allPokemonNames = data.results.map((pokemon: any) => pokemon.name);
    } catch (error) {
      console.log("Error loading pokemon list, using popular list");
      allPokemonNames = [...popularPokemon];
    }
  }

  function showSuggestions(query: string) {
    if (!query || query.length < 2) {
      hideSuggestions();
      return;
    }

    const matches = allPokemonNames
      .filter((name) => name.toLowerCase().includes(query.toLowerCase()))
      .slice(0, 5);

    if (matches.length === 0) {
      hideSuggestions();
      return;
    }

    if (suggestionsDiv) {
      suggestionsDiv.innerHTML = matches
        .map(
          (name) =>
            `<div class="suggestion-item" data-name="${name}">${name}</div>`
        )
        .join("");
      suggestionsDiv.style.display = "block";

      // Agregar event listeners a las sugerencias
      suggestionsDiv.querySelectorAll(".suggestion-item").forEach((item) => {
        item.addEventListener("click", () => {
          const pokemonName = item.getAttribute("data-name");
          if (pokemonName) {
            input.value = pokemonName;
            hideSuggestions();
            searchPokemon();
          }
        });
      });
    }
  }

  function hideSuggestions() {
    if (suggestionsDiv) {
      suggestionsDiv.style.display = "none";
    }
  }

  function isShiny(): boolean {
    return Math.random() < 0.05; // 5% de probabilidad
  }

  async function searchPokemon() {
    const pokemonName = input.value.toLowerCase().trim();
    if (!pokemonName) return;

    hideSuggestions();
    if (result) result.innerHTML = '<div class="loading">Buscando</div>';

    try {
      const response = await fetch(
        `https://pokeapi.co/api/v2/pokemon/${pokemonName}`
      );

      if (!response.ok) {
        throw new Error("Pok√©mon no encontrado");
      }

      const pokemon = await response.json();
      const shiny = isShiny();
      const imageUrl = shiny
        ? pokemon.sprites.front_shiny
        : pokemon.sprites.front_default;

      if (result) {
        result.innerHTML = `
          <div class="pokemon-card">
            ${shiny ? '<div class="shiny-indicator">‚ú® SHINY</div>' : ""}
            <div class="pokemon-image">
              <img src="${imageUrl}" alt="${pokemon.name}${shiny ? " (shiny)" : ""}" />
            </div>
            <div class="pokemon-info">
              <h3 class="pokemon-name">${pokemon.name}</h3>
              <div class="pokemon-id">#${pokemon.id.toString().padStart(3, "0")}</div>
            </div>
          </div>
        `;
      }
    } catch (error) {
      if (result) {
        result.innerHTML =
          '<div class="error">Pok√©mon no encontrado. Verifica el nombre e intenta de nuevo.</div>';
      }
    }
  }

  // Event listeners
  input?.addEventListener("input", (e) => {
    const query = (e.target as HTMLInputElement).value;
    clearTimeout(debounceTimer);
    debounceTimer = window.setTimeout(() => {
      showSuggestions(query);
    }, 300);
  });

  input?.addEventListener("keypress", (e) => {
    if (e.key === "Enter") {
      e.preventDefault();
      hideSuggestions();
      searchPokemon();
    }
  });

  input?.addEventListener("blur", () => {
    // Delay para permitir clicks en sugerencias
    setTimeout(hideSuggestions, 200);
  });

  searchBtn?.addEventListener("click", (e) => {
    e.preventDefault();
    searchPokemon();
  });

  // Cargar lista de Pok√©mon al iniciar
  loadPokemonList();
</script>
