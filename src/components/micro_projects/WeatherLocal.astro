<div class="weather-local">
  <div class="weather-controls">
    <button id="get-weather" class="weather-btn">Obtener Clima Local</button>
  </div>

  <div id="weather-result" class="weather-result">
    <p>Haz click en el botón para obtener el clima de tu ubicación</p>
  </div>
</div>

<style>
  .weather-local {
    max-width: 400px;
    margin: 0 auto;
  }

  .weather-controls {
    text-align: center;
    margin-bottom: 1.5rem;
  }

  .weather-btn {
    padding: 0.75rem 1.5rem;
    background: var(--cristal);
    color: var(--abismo);
    border: none;
    border-radius: var(--radius);
    cursor: pointer;
    font-weight: 500;
    transition: all var(--transition);
  }

  .weather-btn:hover {
    background: transparent;
    color: var(--cristal);
    border: 1px solid var(--cristal);
  }

  .weather-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .weather-result {
    text-align: center;
    padding: 1.5rem;
    border: 1px solid rgba(100, 255, 218, 0.2);
    border-radius: var(--radius);
    background: rgba(30, 58, 95, 0.2);
  }

  .weather-card {
    text-align: center;
  }

  .weather-icon {
    font-size: 4rem;
    margin: 1rem 0;
  }

  .temperature {
    font-size: 2.5rem;
    font-weight: bold;
    color: var(--cristal);
    margin: 0.5rem 0;
  }

  .weather-description {
    font-size: 1.2rem;
    color: var(--oro);
    text-transform: capitalize;
    margin-bottom: 1rem;
  }

  .weather-details {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 1rem;
    margin-top: 1rem;
  }

  .detail {
    padding: 0.5rem;
    background: rgba(100, 255, 218, 0.1);
    border-radius: var(--radius);
  }

  .detail-label {
    font-size: 0.8rem;
    opacity: 0.8;
  }

  .detail-value {
    font-weight: bold;
    color: var(--luz);
  }

  .loading {
    color: var(--oro);
  }

  .error {
    color: #ff6b6b;
  }
</style>

<script>
  const getWeatherBtn = document.getElementById("get-weather");
  const weatherResult = document.getElementById("weather-result");

  // API key de OpenWeatherMap (necesitarías registrarte para obtener una real)
  const API_KEY = "demo"; // En un proyecto real, esto debería estar en variables de entorno

  function getWeatherIcon(code: string): string {
    const iconMap: { [key: string]: string } = {
      "01d": "☀️",
      "01n": "🌙",
      "02d": "⛅",
      "02n": "☁️",
      "03d": "☁️",
      "03n": "☁️",
      "04d": "☁️",
      "04n": "☁️",
      "09d": "🌧️",
      "09n": "🌧️",
      "10d": "🌦️",
      "10n": "🌦️",
      "11d": "⛈️",
      "11n": "⛈️",
      "13d": "❄️",
      "13n": "❄️",
      "50d": "🌫️",
      "50n": "🌫️",
    };
    return iconMap[code] || "🌤️";
  }

  async function getWeather() {
    if (!navigator.geolocation) {
      if (weatherResult) {
        weatherResult.innerHTML =
          '<p class="error">La geolocalización no está soportada en este navegador.</p>';
      }
      return;
    }

    if (weatherResult)
      weatherResult.innerHTML =
        '<p class="loading">Obteniendo ubicación...</p>';

    navigator.geolocation.getCurrentPosition(
      async (position) => {
        const { latitude, longitude } = position.coords;

        if (weatherResult)
          weatherResult.innerHTML =
            '<p class="loading">Obteniendo datos del clima...</p>';

        try {
          // Nota: Esta es una demo. En un proyecto real necesitarías:
          // 1. Una API key válida de OpenWeatherMap
          // 2. Configurar CORS adecuadamente
          // 3. Manejar la API key de forma segura

          // Para esta demo, mostramos datos ficticios
          setTimeout(() => {
            if (weatherResult) {
              weatherResult.innerHTML = `
                <div class="weather-card">
                  <div class="weather-icon">🌤️</div>
                  <div class="temperature">22°C</div>
                  <div class="weather-description">Parcialmente nublado</div>
                  <div class="weather-details">
                    <div class="detail">
                      <div class="detail-label">Sensación</div>
                      <div class="detail-value">25°C</div>
                    </div>
                    <div class="detail">
                      <div class="detail-label">Humedad</div>
                      <div class="detail-value">65%</div>
                    </div>
                    <div class="detail">
                      <div class="detail-label">Viento</div>
                      <div class="detail-value">12 km/h</div>
                    </div>
                    <div class="detail">
                      <div class="detail-label">Presión</div>
                      <div class="detail-value">1013 hPa</div>
                    </div>
                  </div>
                  <p style="margin-top: 1rem; font-size: 0.8rem; opacity: 0.7;">
                    📍 Ubicación: ${latitude.toFixed(2)}, ${longitude.toFixed(2)}
                  </p>
                  <p style="margin-top: 0.5rem; font-size: 0.7rem; opacity: 0.5;">
                    * Datos de demostración
                  </p>
                </div>
              `;
            }
          }, 1500);

          /* 
          // Código para API real (descomentado cuando tengas API key):
          const response = await fetch(
            `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric&lang=es`
          );
          
          if (!response.ok) {
            throw new Error('Error al obtener datos del clima');
          }

          const data = await response.json();
          
          if (weatherResult) {
            weatherResult.innerHTML = `
              <div class="weather-card">
                <div class="weather-icon">${getWeatherIcon(data.weather[0].icon)}</div>
                <div class="temperature">${Math.round(data.main.temp)}°C</div>
                <div class="weather-description">${data.weather[0].description}</div>
                <div class="weather-details">
                  <div class="detail">
                    <div class="detail-label">Sensación</div>
                    <div class="detail-value">${Math.round(data.main.feels_like)}°C</div>
                  </div>
                  <div class="detail">
                    <div class="detail-label">Humedad</div>
                    <div class="detail-value">${data.main.humidity}%</div>
                  </div>
                  <div class="detail">
                    <div class="detail-label">Viento</div>
                    <div class="detail-value">${Math.round(data.wind.speed * 3.6)} km/h</div>
                  </div>
                  <div class="detail">
                    <div class="detail-label">Presión</div>
                    <div class="detail-value">${data.main.pressure} hPa</div>
                  </div>
                </div>
                <p style="margin-top: 1rem; font-size: 0.8rem; opacity: 0.7;">
                  📍 ${data.name}, ${data.sys.country}
                </p>
              </div>
            `;
          }
          */
        } catch (error) {
          if (weatherResult) {
            weatherResult.innerHTML =
              '<p class="error">Error al obtener los datos del clima. Intenta de nuevo.</p>';
          }
        }
      },
      (error) => {
        if (weatherResult) {
          weatherResult.innerHTML =
            '<p class="error">No se pudo obtener la ubicación. Verifica los permisos de ubicación.</p>';
        }
      }
    );
  }

  getWeatherBtn?.addEventListener("click", getWeather);
</script>
