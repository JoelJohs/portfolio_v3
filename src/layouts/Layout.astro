---
export interface Props {
  title: string;
}
const { title } = Astro.props;

import Footer from "../components/sections/Footer.astro";
import MusicPlayer from "../components/ui/MusicPlayer.astro";
import Navbar from "../components/ui/Navbar.astro";
import TrophyModal from "../components/ui/TrophyModal.astro";
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <!-- Fuentes -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <!-- Part√≠culas -->
    <div class="particles-container" id="particles"></div>

    <Navbar />

    <slot />
    <Footer />
    <TrophyModal />
    <MusicPlayer />
  </body>
</html>

<style is:global>
  /* Estilos globales */
  :root {
    --abismo: #0a192f;
    --niebla: #1e3a5f;
    --cristal: #64ffda;
    --luz: #e6f1ff;
    --oro: #d4af37;
    --dark-bg: #050c17;
    --dark-surface: #0f172a;
    --dark-primary: #36d4a0;
    --dark-secondary: #ffc857;
    --dark-text: #e2e8f0;
    --radius: 8px;
    --transition: 0.3s ease;
    --font: "Inter", system-ui, sans-serif;
  }
  [data-theme="dark"] {
    --abismo: var(--dark-bg);
    --niebla: var(--dark-surface);
    --cristal: var(--dark-primary);
    --luz: var(--dark-text);
    --oro: var(--dark-secondary);
  }
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  html,
  body {
    height: 100%;
  }
  body {
    font-family: var(--font);
    background: var(--abismo);
    color: var(--luz);
    line-height: 1.6;
    transition:
      background var(--transition),
      color var(--transition);
    overflow-x: hidden;
  }
  .container {
    width: 90%;
    max-width: 960px;
    margin: auto;
  }
  h2 {
    font-size: 2.2rem;
    margin-bottom: 1.5rem;
    text-align: center;
  }
  a {
    color: var(--cristal);
    transition: color var(--transition);
  }
  section {
    padding: 4rem 0;
  }

  /* Part√≠culas */
  .particles-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -200;
    pointer-events: none;
  }
  .particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: var(--cristal);
    border-radius: 50%;
    opacity: 0.35;
    animation: float 25s infinite linear;
  }
  @keyframes float {
    0% {
      transform: translateY(100vh) rotate(0deg);
    }
    100% {
      transform: translateY(-100vh) rotate(360deg);
    }
  }
</style>

<script is:inline>
  /* PART√çCULAS */
  const pContainer = document.getElementById("particles");
  for (let i = 0; i < 60; i++) {
    const p = document.createElement("div");
    p.className = "particle";
    p.style.left = Math.random() * 100 + "vw";
    p.style.animationDelay = Math.random() * 25 + "s";
    pContainer.appendChild(p);
  }

  /* KONAMI */
  let k = [];
  const KONAMI = [
    "ArrowUp",
    "ArrowUp",
    "ArrowDown",
    "ArrowDown",
    "ArrowLeft",
    "ArrowRight",
    "ArrowLeft",
    "ArrowRight",
    "KeyB",
    "KeyA",
  ];
  window.addEventListener("keydown", (e) => {
    k.push(e.code);
    if (k.length > 10) k.shift();
    if (k.join() === KONAMI.join()) {
      const dark = document.documentElement.dataset.theme === "dark";
      document.documentElement.dataset.theme = dark ? "" : "dark";
      const toggleButton = document.getElementById("toggleMusic");
      if (toggleButton) {
        toggleButton.textContent = dark ? "‚ñ∂Ô∏è" : "‚è∏Ô∏è";
      }
      k = [];
      // Trigger custom event para logro - achievement
      window.dispatchEvent(
        new CustomEvent("logro", { detail: dark ? "modoClaro" : "modoOscuro" })
      );
    }
  });

  const logrosData = [
    {
      id: "copiarEmail",
      name: "Rastro digital",
      hint: "¬øD√≥nde guardo mi correo?",
    },
    {
      id: "visitoProyectos",
      name: "Explorador curioso",
      hint: "Mira todos los tipos de proyectos.",
    },
    {
      id: "modoOscuro",
      name: "Sombras activadas",
      hint: "Arriba, arriba, abajo, abajo‚Ä¶",
    },
    {
      id: "tripleClick",
      name: "Toque insistente",
      hint: "El logo no es un bot√≥n‚Ä¶ o s√≠.",
    },
    { id: "reveloLinkedIn", name: "Identidad revelada", hint: "J L H" },
    {
      id: "reprodujoMusica",
      name: "Ritmo retro",
      hint: "Escucha el ambiente.",
    },
    {
      id: "modoClaro",
      name: "Aurora digital",
      hint: "¬øVolver a la normalidad?",
    },
    {
      id: "datoCurioso",
      name: "Paciente del c√≥digo",
      hint: "Qu√©date quieto un minuto.",
    },
  ];

  const LS_ACHIEVEMENTS = "achievements";
  const achievements = new Set(
    JSON.parse(localStorage.getItem(LS_ACHIEVEMENTS) || "[]")
  );

  /* UTILS GLOBALES */
  window.trackAchieve = (k) => {
    if (achievements.has(k)) return;
    achievements.add(k);
    localStorage.setItem(LS_ACHIEVEMENTS, JSON.stringify([...achievements]));
    window.dispatchEvent(new CustomEvent("achievementUnlocked", { detail: k }));
    showToast(`üèÜ ${logrosData.find((l) => l.id === k).name}`);
  };

  function showToast(msg) {
    const t = document.createElement("div");
    t.className = "toast";
    t.textContent = msg;
    t.style.cssText = `
      position: fixed; bottom: 5rem; left: 50%; transform: translateX(-50%);
      background: var(--oro); color: var(--abismo); padding: .5rem 1rem;
      border-radius: var(--radius); z-index: 999; font-weight: 600;
    `;
    document.body.appendChild(t);
    setTimeout(() => t.remove(), 3000);
  }

  /* KONAMI CODE */
  let k = [];
  const KONAMI = [
    "ArrowUp",
    "ArrowUp",
    "ArrowDown",
    "ArrowDown",
    "ArrowLeft",
    "ArrowRight",
    "ArrowLeft",
    "ArrowRight",
    "KeyB",
    "KeyA",
  ];
  window.addEventListener("keydown", (e) => {
    k.push(e.code);
    if (k.length > 10) k.shift();
    if (k.join() === KONAMI.join()) {
      const dark = document.documentElement.dataset.theme === "dark";
      document.documentElement.dataset.theme = dark ? "" : "dark";
      window.trackAchieve(dark ? "modoClaro" : "modoOscuro");
      k = [];
    }
  });

  /* JLH LINKEDIN SECRET */
  let jlh = "";
  window.addEventListener("keydown", (e) => {
    jlh += e.key.toLowerCase();
    if (jlh.includes("jlh")) {
      window.trackAchieve("reveloLinkedIn");
      jlh = "";
    }
  });

  /* INACTIVITY ACHIEVEMENT */
  let idle;
  const resetIdle = () => {
    clearTimeout(idle);
    idle = setTimeout(() => window.trackAchieve("datoCurioso"), 60000);
  };
  ["mousemove", "keydown", "scroll"].forEach((evt) =>
    window.addEventListener(evt, resetIdle)
  );
  resetIdle();
</script>
