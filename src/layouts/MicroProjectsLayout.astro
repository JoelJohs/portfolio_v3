---
export interface Props {
  title: string;
}
const { title } = Astro.props;

import Footer from "../components/sections/Footer.astro";
import Navbar from "../components/ui/Navbar.astro";
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <!-- Fuentes -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <!-- Partículas CSS simples -->
    <div class="particles-container" id="particles"></div>

    <Navbar />

    <main>
      <slot />
    </main>

    <Footer />
  </body>
</html>

<style is:global>
  /* Estilos globales simplificados */
  :root {
    --abismo: #0a192f;
    --niebla: #1e3a5f;
    --cristal: #64ffda;
    --luz: #e6f1ff;
    --oro: #d4af37;
    --dark-bg: #050c17;
    --dark-surface: #0f172a;
    --dark-primary: #36d4a0;
    --dark-secondary: #ffc857;
    --dark-text: #e2e8f0;
    --radius: 8px;
    --transition: 0.3s ease;
    --font: "Inter", system-ui, sans-serif;
  }

  [data-theme="dark"] {
    --abismo: var(--dark-bg);
    --niebla: var(--dark-surface);
    --cristal: var(--dark-primary);
    --luz: var(--dark-text);
    --oro: var(--dark-secondary);
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html,
  body {
    height: 100%;
    scroll-behavior: smooth;
  }

  body {
    font-family: var(--font);
    background: var(--abismo);
    color: var(--luz);
    line-height: 1.6;
    font-size: clamp(0.9rem, 2.5vw, 1rem);
    transition:
      background var(--transition),
      color var(--transition);
    overflow-x: hidden;
  }

  .container {
    width: 90%;
    max-width: 960px;
    margin: auto;
  }

  h1,
  h2,
  h3 {
    color: var(--cristal);
    margin-bottom: 1.5rem;
  }

  h1 {
    font-size: clamp(2rem, 6vw, 3rem);
    text-align: center;
  }

  h2 {
    font-size: clamp(1.5rem, 5vw, 2.2rem);
    text-align: center;
  }

  a {
    color: var(--cristal);
    transition: color var(--transition);
  }

  main {
    min-height: calc(100vh - 120px);
    padding-top: 80px;
  }

  /* Partículas simples */
  .particles-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    pointer-events: none;
    overflow: hidden;
  }

  .particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: var(--cristal);
    border-radius: 50%;
    opacity: 0.4;
    animation: float 20s infinite linear;
    box-shadow: 0 0 4px var(--cristal);
  }

  @keyframes float {
    0% {
      transform: translateY(100vh) rotate(0deg);
    }
    100% {
      transform: translateY(-100vh) rotate(360deg);
    }
  }

  /* Responsive mobile */
  @media (max-width: 640px) {
    main {
      padding-top: 70px;
    }

    .container {
      width: 95%;
    }
  }
</style>

<script is:inline>
  /* PARTÍCULAS SIMPLES */
  const pContainer = document.getElementById("particles");
  if (pContainer) {
    for (let i = 0; i < 30; i++) {
      const p = document.createElement("div");
      p.className = "particle";
      p.style.left = Math.random() * 100 + "vw";
      p.style.animationDelay = Math.random() * 20 + "s";
      p.style.animationDuration = 15 + Math.random() * 10 + "s";
      pContainer.appendChild(p);
    }
  }

  /* SIMPLE THEME TOGGLE - Solo para microprojects */
  window.addEventListener("keydown", (e) => {
    if (e.ctrlKey && e.key.toLowerCase() === "t") {
      e.preventDefault();
      const dark = document.documentElement.dataset.theme === "dark";
      document.documentElement.dataset.theme = dark ? "" : "dark";
    }
  });
</script>
